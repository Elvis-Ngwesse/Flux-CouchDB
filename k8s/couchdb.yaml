apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: couchdb
  namespace: car-app
  labels:
    app: couchdb
spec:
  serviceName: "couchdb"
  replicas: 1                      # single node
  selector:
    matchLabels:
      app: couchdb
  template:
    metadata:
      labels:
        app: couchdb
    spec:
      initContainers:
        - name: init-vmargs
          image: alpine
          command: ["/bin/sh", "-c"]
          args:
            - |
              apk add --no-cache gettext && \
              envsubst < /vmargs-template/vm.args > /vmargs-final/vm.args
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_SECRET
          volumeMounts:
            - name: vmargs-template
              mountPath: /vmargs-template
            - name: vmargs-final
              mountPath: /vmargs-final
      containers:
        - name: couchdb
          image: couchdb:3.3.2
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: COUCHDB_USER
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_USER
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_PASSWORD
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_SECRET
          ports:
            - name: couchdb
              containerPort: 5984
            - name: epmd
              containerPort: 4369
            - name: metrics
              containerPort: 9100
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "
              [couchdb]
              single_node = true            # enable single node mode

              [httpd]
              bind_address = 0.0.0.0

              [chttpd]
              bind_address = 0.0.0.0

              [admins]
              ${COUCHDB_USER} = ${COUCHDB_PASSWORD}

              [secret]
              cookie = ${COUCHDB_SECRET}

              [log]
              level = info
              " > /opt/couchdb/etc/local.d/docker.ini && \
              /opt/couchdb/bin/couchdb
          volumeMounts:
            - name: couchdb-pvc
              mountPath: /opt/couchdb/data
            - name: vmargs-final
              mountPath: /opt/couchdb/etc/vm.args
              subPath: vm.args
      volumes:
        - name: vmargs-template
          configMap:
            name: couchdb-vmargs
        - name: vmargs-final
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: couchdb-pvc
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: standard
        resources:
          requests:
            storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: couchdb
  namespace: car-app
  labels:
    app: couchdb
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 5984
      name: http
      protocol: TCP
      targetPort: 5984
  selector:
    app: couchdb

---
apiVersion: v1
kind: Service
metadata:
  name: couchdb-nodeport
  namespace: car-app
  labels:
    app: couchdb
spec:
  type: NodePort
  ports:
    - port: 5984
      name: http
      nodePort: 30984
      protocol: TCP
      targetPort: 5984
  selector:
    app: couchdb

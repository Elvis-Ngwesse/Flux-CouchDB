---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: car-data-generator
  namespace: car-app
  labels:
    app: car-data-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: car-data-generator
  template:
    metadata:
      labels:
        app: car-data-generator
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      containers:
        - name: data-generator
          image: dockerelvis/data-generator:044a9c3
          imagePullPolicy: Always
          env:
            - name: COUCHDB_USER
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_USER
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_PASSWORD
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_SECRET
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: influxdb-secret
                  key: INFLUXDB_TOKEN
            - name: INFLUXDB_URL
              value: http://influxdb.car-logs.svc.cluster.local:8086
            - name: COUCHDB_HOST
              value: couchdb
            - name: COUCHDB_PORT
              value: "5984"
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: logs
              mountPath: /app/logs
          readinessProbe:
            exec:
              command: ["ls", "/app/logs"]
            initialDelaySeconds: 10
            periodSeconds: 15
          livenessProbe:
            exec:
              command: ["ls", "/app/logs"]
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: car-data-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: car-dashboard
  namespace: car-app
  labels:
    app: car-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: car-dashboard
  template:
    metadata:
      labels:
        app: car-dashboard
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      containers:
        - name: dash-app
          image: dockerelvis/car-dashboard:044a9c3
          imagePullPolicy: Always
          ports:
            - containerPort: 8050
          env:
            - name: COUCHDB_USER
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_USER
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_PASSWORD
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: couchdb-secret
                  key: COUCHDB_SECRET
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: influxdb-secret
                  key: INFLUXDB_TOKEN
            - name: INFLUXDB_URL
              value: http://influxdb.car-logs.svc.cluster.local:8086
            - name: COUCHDB_HOST
              value: couchdb
            - name: COUCHDB_PORT
              value: "5984"
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: logs
              mountPath: /app/logs
          readinessProbe:
            httpGet:
              path: /
              port: 8050
            initialDelaySeconds: 10
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /
              port: 8050
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: car-app-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: car-dashboard
  namespace: car-app
spec:
  selector:
    app: car-dashboard
  ports:
    - name: http
      port: 80
      targetPort: 8050
      protocol: TCP

---
